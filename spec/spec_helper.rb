require 'rubygems'
require 'spec'
require 'spec/matchers/include_options'

gem 'rails', ENV['RAILS_VERSION']

# Helper so loading all of rails is not needed just to get the version
module Rails
  module VERSION
    version_parts = ENV['RAILS_VERSION'].split(".").collect { |part| part.to_i }
    MAJOR = version_parts[0]
    MINOR = version_parts[1]
    TINY  = version_parts[2]
    STRING = [MAJOR, MINOR, TINY].join('.')
  end
  def self.version
    VERSION::STRING
  end
end

require 'drails'
require 'installer'
require File.join(File.dirname(__FILE__), 'test_view')

Spec::Runner.configure do |config|
  config.mock_with :rr
  config.include(CustomMatchers)
end

# Used for a real quick and dirty JSON parser.  It doesn't do much, but it's enough to
# when trying to test output generated by ActionView::Helpers::JavascriptHelper.options_for_ajax.  Using
# a real JSON parser will bomb on output generated by this function.
def dirty_json_decode(json_string)
  json_string.gsub!(/^(\s*\{)/, "")
  if $1
    json_string.gsub!(/\s*\}\s*$/, "")
  end
  json_string.split(',').inject({}) do |memo, kv|
    (k,v) = kv.split(":", 2)
    v.strip!
    memo[k.strip] = case v
    when /^['"](.*?)['"]$/: $1
    when "true": true
    when "false": false
    else
      v
    end
    memo
  end
end

def test_alias_method_chained(mod, message, feature, &block)
  method_invoked = false
  stub(mod).alias_method_chain { |func, with| method_invoked = true if (message == func && feature == with) }
  yield block if block_given?
  method_invoked
end